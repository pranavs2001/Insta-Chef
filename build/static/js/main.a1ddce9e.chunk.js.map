{"version":3,"sources":["Components/SignIn/Login.js","Components/SignIn/Hero.js","Components/SignIn/fire.js","Components/SignIn/LoginPage.js","Components/MealDB/search.js","Components/Navbar/NavbarElements.js","Components/Navbar/index.js","Components/MealDB/checkerror.js","Components/MealDB/ingredientsearch.js","Components/Pantry/AddIngredModal.js","Components/Pantry/Pantry.js","App.js","index.js"],"names":["Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Hero","handleLogout","fire","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LoginPage","useState","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","ListRecipes","Object","keys","recipes","map","id","index","Search","state","loaded","keyword","data","validRecipes","searchStr","matches","recipeList","this","recipeid","name","toLocaleLowerCase","startsWith","toLowerCase","push","setState","matchingrecipes","style","width","height","background","border","padding","placeholder","updateSearch","React","Component","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","to","activeStyle","CheckError","response","status","json","Error","statusText","ShowIngredients","ingredients","length","ingredient","addItemToPantry","loggedIn","uid","IngredientSearch","baseIngredients","validIngredients","fetch","URLSearchParams","then","result","ingredientList","processIngredients","error","console","log","item","ingredientData","AddIngredModal","Modal","setAppElement","document","getElementById","modalIsOpen","setIsOpen","closeModal","isOpen","onAfterOpen","onRequestClose","contentLabel","Pantry","items","tests","itemAdded","viewPantry","bind","removeItemFromPantry","currentUser","database","ref","orderByChild","on","snapshot","forEach","childSnapshot","val","elem","itemRef","itemAlreadyInPantry","toString","localeCompare","alert","newItemRef","set","key","child","display","justifyContent","diplay","textAlign","margin","Home","App","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.a1ddce9e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Login = (props) => {\n\n    const { \n        email,\n        setEmail,\n        password,\n        setPassword,\n        handleLogin,\n        handleSignup,\n        hasAccount,\n        setHasAccount,\n        emailError,\n        passwordError\n    } = props;\n    return (\n\n        <section className=\"login\">\n           <div className=\"loginContainer\">\n               <label>\n                   Email\n               </label>\n               <input\n                type=\"text\"\n                autoFocus\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                />\n                <p className=\"errorMsg\"> {emailError} </p>\n                <label> Password </label>\n                <input\n                type=\"password\"\n                required\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                />\n                <p className=\"errorMsg\">\n                    {passwordError}\n                </p>\n                <div className= \"btnContainer\">\n                    {hasAccount? (\n                        <>\n                        <button onClick={handleLogin}>Sign In</button>\n                        <p>Don't have an account? \n                            <span onClick={()=> setHasAccount(!hasAccount)}> {/* toggle the state when you click the span*/}\n                                Sign up \n                            </span>\n                        </p>\n                        </>\n                    ): (\n                        <>\n                        <button onClick={handleSignup}>Sign up</button>\n                        <p>Have an account? \n                            <span onClick={()=> setHasAccount(!hasAccount)}>\n                                Sign In\n                            </span>\n                        </p>\n                        </>\n                     )}\n                </div>\n           </div>\n        </section>\n    );\n};\n\nexport default Login;","import React from 'react';\n\nconst Hero = ({handleLogout}) => {\n\n    return(\n        <section className=\"Hero\">\n            <nav>\n                <h2> Welcome</h2>\n                <button onClick={handleLogout}> Logout </button>\n            </nav>\n        </section>\n    )\n}\n\nexport default Hero;","import firebase from 'firebase';\n\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nconst fire = firebase.initializeApp(firebaseConfig);\n\nexport default fire;","import './LoginPage.css';\nimport React, {useState, useEffect} from \"react\";\nimport Login from './Login';\nimport Hero from './Hero';\nimport fire from './fire';\n\nfunction LoginPage() {\n\n  //set up the initial states\n  const [user, setUser] = useState(''); \n  const[email, setEmail] = useState(''); \n  const[password, setPassword] = useState('');\n  const[emailError, setEmailError] = useState('');\n  const[passwordError, setPasswordError] = useState('');\n  const[hasAccount, setHasAccount] = useState(false);\n\n  //two cleanup functions to clear inputs and error messages\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email,password)\n      .catch(err => {\n        switch(err.code){\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  }\n\n  const handleSignup = () => {\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email,password)\n      .catch(err => {\n        switch(err.code){\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  }\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  }\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if(user){\n        clearInputs();         //whenever we have a user\n        setUser(user);\n      }\n      else {                   //set User to emtpy string if no user\n        setUser(\"\");\n      }\n    });\n  }\n\n  useEffect(() =>{\n    authListener()             //listen to events\n  }, [])\n\n\n  return (\n    <div className=\"LoginPage\">\n      {/* <p>Insta-chef</p>\n      <Search /> */}\n      {/* render Welcome if the user exists, and login if the user doesn't exist */}\n      {/* user exists if you've signed up or logged in */}\n      {user ? (\n            <Hero handleLogout={handleLogout}/>\n      ): (\n        <Login //with all possible states\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        handleLogin={handleLogin}\n        handleSignup={handleSignup}\n        hasAccount={hasAccount}\n        setHasAccount={setHasAccount}\n        emailError={emailError}\n        passwordError={passwordError}\n      />\n      )}\n\n\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport data from '../../support/recipelist.json'\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      keyword: '',\n      recipes: data,\n      validRecipes: {},\n    }\n    // recipes is the total list of recipes as fetched on loading\n    // recipes is a dictionary mapping a recipe id to a recipe name\n    // validrecipes is a list of recipes that match the keyword\n  }\n\n  componentDidMount() {\n    // TODO: Fetch the list of recipes from firebase\n  }\n\n  updateSearch(value) {\n    const searchStr = value;\n    let matches = [];\n    // Make sure ingredient list is not empty\n    if (searchStr != '') {\n      const recipeList = this.state.recipes;\n      for (const recipeid in recipeList) {\n        const name = recipeList[recipeid]\n        if (name.toLocaleLowerCase().startsWith(searchStr.toLowerCase())) {\n          matches.push({'id': recipeid, 'name': name});\n        }\n      }\n    }\n    this.setState({\n      keyword: value,\n      validRecipes: matches,\n    });\n  }\n\n render() {\n    // get state variables\n    const keyword = this.state.keyword;\n    const matchingrecipes = this.state.validRecipes;\n    // parameters for search bar\n    const BarStyling = {width:\"20rem\", height: \"2rem\", background:\"#F2F1F9\", border:\"bold\", padding:\"0.5rem\"};\n    return (\n      <div>\n        <input\n         style={BarStyling}\n         key=\"recipeSearch\"\n         value={keyword}\n         placeholder={\"Search for a recipe\"}\n         onChange={(e) => this.updateSearch(e.target.value)}\n        />\n        <ListRecipes recipes={matchingrecipes}/>\n      </div>\n    );\n  }\n}\n\n// List all matching recipes\nfunction ListRecipes(props) {\n  return (\n    Object.keys(props.recipes).map((id, index) =>\n      <li key={props.recipes[index]['id']}>{props.recipes[index]['name']}</li>\n    )\n  );\n}\n\nexport default Search;","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  background: #4097aa;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem calc((100vw - 1000px) / 2);\n  z-index: 10;\n  /* Third Nav */\n  /* justify-content: flex-start; */\n`;\n\nexport const NavLink = styled(Link)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  &.active {\n    color: #15cdfc;\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #fff;\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n  /* Second Nav */\n  /* margin-right: 24px; */\n  /* Third Nav */\n  /* width: 100vw;\n  white-space: nowrap; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  /* Third Nav */\n  /* justify-content: flex-end;\n  width: 100vw; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background: #f3deca;\n  padding: 10px 22px;\n  color: #2d4057;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  /* Second Nav */\n  margin-left: 24px;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #fa9483;\n  }\n`;","import React from 'react';\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink\n} from './NavbarElements';\n\nconst Navbar = () => {\n  return (\n    <>\n      <Nav>\n        <NavLink to='/'>\n         Home\n        </NavLink>\n        <Bars />\n        <NavMenu>\n          <NavLink to='/Search' activeStyle>\n            Search\n          </NavLink>\n          <NavLink to='/Pantry' activeStyle>\n            Pantry\n          </NavLink>\n          <NavLink to='/Profile' activeStyle>\n            Profile\n          </NavLink>\n          {/* <NavLink to='/sign-up' activeStyle>\n            Sign Up\n          </NavLink> */}\n          {/* Second Nav */}\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\n        </NavMenu>\n        <NavBtn>\n          <NavBtnLink to='/Login'>Sign In/ Sign Up</NavBtnLink>\n        </NavBtn>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;","function CheckError(response) {\n  if (response.status >= 200 && response.status <= 299) {\n    return response.json();\n  } else {\n    throw Error(response.statusText);\n  }\n}\n\nexport default CheckError","import React from 'react'\nimport CheckError from \"./checkerror\";\n\nfunction ShowIngredients (props) {\n  if (props.loaded == false) {\n    return (\n      <p>Loading ingredients...</p>\n    )\n  } else if (props.ingredients.length == 0) {\n    return (\n      <p>No matching ingredients</p>\n    )\n  } else {\n    return (\n      props.ingredients.map((ingredient) => \n        <div key={ingredient['id']}>\n          <button onClick={() => {props.addItemToPantry(ingredient['name'], props.loggedIn, props.uid)}}>\n          Add {ingredient['name']}</button>\n          {/* <li>{ingredient['name']}</li> */}\n        </div>\n      )\n    )\n  }\n}\n\nclass IngredientSearch extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      baseIngredients: {},\n      validIngredients: [],\n      keyword: '',\n      loaded: false,\n      addItemToPantry: props.addItemToPantry,\n      loggedIn: props.loggedIn,\n      uid: props.uid,\n    }\n  }\n\n  componentDidMount() {\n    // Fetch the list of valid ingredients\n    const url = 'https://www.themealdb.com/api/json/v1/1/list.php?'\n    const params = {'i': 'list'}\n    fetch(url + new URLSearchParams(params))\n      .then(CheckError)\n      .then(result => {\n        const ingredientList = result['meals'];\n        this.processIngredients(ingredientList);\n      })\n      .catch(error => console.log(error));\n  }\n\n  processIngredients(ingredientList) {\n    // Process the list of ingredients\n    let ingredients = {};\n    for (const item in ingredientList) {\n      const ingredientData = ingredientList[item]\n      const data = {\n        'id': ingredientData['idIngredient'],\n        'description': ingredientData['strDescription'],\n      }\n      ingredients[ingredientData['strIngredient']] = data\n    }\n    // Set the state\n    this.setState({\n      baseIngredients: ingredients,\n      loaded: true,\n    });\n  }\n\n  updateSearch(value) {\n    const searchStr = value;\n    let matches = [];\n    // Make sure ingredient list is not empty\n    if (searchStr != '') {\n      const ingredientList = this.state.baseIngredients;\n      for (const ingredient in ingredientList) {\n        if (ingredient.toLocaleLowerCase().startsWith(searchStr.toLowerCase())) {\n          matches.push({'name': ingredient, 'id': ingredientList[ingredient]['id']});\n        }\n      }\n    }\n    this.setState({\n      keyword: value,\n      validIngredients: matches,\n    });\n  }\n\n  render() {\n    // get state variables\n    const keyword = this.state.keyword;\n    const validIngredients = this.state.validIngredients;\n    // parameters for search bar\n    const BarStyling = {width:\"20rem\", height: \"2rem\", background:\"#F2F1F9\", border:\"bold\", padding:\"0.5rem\"};\n    return (\n      <div>\n        <input\n         style={BarStyling}\n         key=\"ingredientSearch\"\n         value={keyword}\n         placeholder={\"Search for an ingredient\"}\n         onChange={(e) => this.updateSearch(e.target.value)}\n        />\n        <ShowIngredients ingredients={validIngredients} loaded={this.state.loaded} \n        addItemToPantry={this.state.addItemToPantry} loggedIn={this.state.loggedIn} uid={this.state.uid}/>\n      </div>\n    );\n  }\n}\n\nexport default IngredientSearch;","// import { ReactComponent } from '*.svg';\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport IngredientSearch from '../MealDB/ingredientsearch'\n\nfunction AddIngredModal (props) {\n    \n    Modal.setAppElement(document.getElementById('root'))\n\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    // Called when modal is opened\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function afterOpenModal() {\n        // Stylistic changes after modal window opens\n    }\n\n    // called when modal is closed\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    if(props.loggedIn)\n    {\n        return (\n            <div>\n                <button onClick={openModal}>Add new Ingredient</button>\n                <Modal\n                    isOpen={modalIsOpen}\n                    onAfterOpen={afterOpenModal}\n                    onRequestClose={closeModal}\n                    contentLabel=\"Ingredient Search Box\"\n                >\n                    <button onClick={closeModal}>Done</button>\n                    <IngredientSearch addItemToPantry={props.addItemToPantry} loggedIn={props.loggedIn} uid={props.uid}/>\n                </Modal>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default AddIngredModal;\n\n        ","import React from 'react';\nimport fire from \"../SignIn/fire\"\nimport \"firebase/database\"\nimport AddIngredModal from './AddIngredModal'\n\nclass Pantry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: {},\n            tests: {},\n            uid: '',\n            itemAdded: '',\n            loggedIn: false,\n        };\n        this.viewPantry = this.viewPantry.bind(this);\n        this.removeItemFromPantry = this.removeItemFromPantry.bind(this);\n    }\n\n   componentDidMount() {\n       //get latest pantry items \n       //if user is logged in\n       if (fire.auth().currentUser) {\n           let uid = fire.auth().currentUser.uid;\n           var itemsRef = fire.database().ref(uid + '/pantryItems').orderByChild('items');\n           itemsRef.on('value', (snapshot) => {\n               let items = [];\n               snapshot.forEach((childSnapshot) => {\n                   let val  = childSnapshot.val();\n                   items.push(val);\n               })\n                this.setState({\n                    items: items,\n                    uid: uid,\n                    loggedIn: true,\n                });\n            })\n        }\n   }\n\n   componentWillUnmount() {\n\n   }\n\n    viewPantry() {\n        if(this.state.loggedIn) {\n            let items = this.state.items;\n            return items.map((elem, index) => {\n                return (\n                    <div>\n                        {/* <button onClick={() => this.removeItemFromPantry(elem.item)}>remove {elem.item}</button> */}\n                        <li key={index}>{elem.item}</li>\n                    </div>\n                )}\n            )\n        } else {\n            return (\n                <div>\n                    <h3>You need to login before viewing your pantry</h3>\n                </div>\n            );\n        }\n    }\n\n    /** \n     * addItemToPantry: add an item to the user's pantry, if the item is already present alert the user\n     * @param {string} item item to be added to the user's pantry\n     * @param {boolean} loggedIn whether the user is logged in or not\n     * @param {string} uid  the current user's uid\n    */\n    addItemToPantry(item, loggedIn, uid) {\n        if(loggedIn) {\n            var itemRef = fire.database().ref(uid + '/pantryItems');\n            var items = itemRef.orderByChild('item');\n            var itemAlreadyInPantry = false;\n            items.on('value', (snapshot) => {\n                let items = [];\n                snapshot.forEach((childSnapshot) => {\n                    let val = childSnapshot.val();\n                    items.push(val);\n                })\n                items.forEach(elem => {\n                    if(elem.item.toString().localeCompare(item) == 0) {\n                        itemAlreadyInPantry = true;\n                    }\n                });\n            });\n            if(itemAlreadyInPantry)\n            {\n                alert(`${item} is already in your pantry`);\n                return;\n            }\n            var newItemRef = itemRef.push();\n            newItemRef.set({\n                item: item,\n            })\n            let key = newItemRef.key;\n            console.log(key);\n            this.setState({\n                \n            })\n        }\n    }\n\n    removeItemFromPantry() {\n        if(this.state.loggedIn) {\n            // console.log('item is: ', 'apples');\n            // var itemRef = fire.database().ref(this.state.uid + '/pantryItems/');\n            // itemRef.child(item).set(null)\n            //     .then(() => {\n            //         console.log('remove succeeded');\n            //     })\n            //     .catch(err => {\n            //         console.log('remove failed: ', err.message);\n            //     });\n            for (let val in this.state.tests) {\n                console.log('val is: ', val);\n            }\n            var updates = {};\n            var ref = fire.database().ref(this.state.uid + '/pantryItems');\n            ref.child('item').set({'item': null})\n            // ref.child('item').set(null)\n            console.log('ref is: ', ref);\n            // ref.update({ 'item': null }).then(() => console.log('success')).catch((err) => console.log('err is: ', err));\n            // var value = ref.orderByChild('items');\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"test\">\n                <button onClick={this.removeItemFromPantry}>remove</button>\n                <div className=\"pantry\" style={{display: \"flex\", justifyContent: \"center\"}}>\n                    <div className=\"pantryItems\" style={{diplay: \"inlineBlock\", textAlign: \"left\"}}>\n                        <this.viewPantry/>\n                    </div>\n                    <div style={{margin: \"50px\"}}>\n                        <AddIngredModal addItemToPantry={this.addItemToPantry} \n                        loggedIn={this.state.loggedIn} uid={this.state.uid}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Pantry;","import React from 'react'\nimport './App.css';\nimport LoginPage from './Components/SignIn/LoginPage';\nimport Search from './Components/MealDB/search';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './Components/Navbar';\nimport Pantry from './Components/Pantry/Pantry';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/Login\" component={LoginPage} />\n          <Route path=\"/Search\" component={Search} />\n          <Route path=\"/Pantry\" component={Pantry} />\n          <p>Insta-chef</p>\n          <LoginPage />\n        </Switch>\n\n        <div>\n          {/* <Search /> */}\n        </div>\n        <div>\n          {/* <Tile recipeid={52772} /> */}\n        </div>\n\n      </div>\n    </Router>\n\n  );\n}\n\n  const Home = () => (\n    <div>\n      <h1> Home Page</h1>\n    </div>\n  )\n\n  export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}